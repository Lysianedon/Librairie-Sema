{"ast":null,"code":"import { mapActions } from 'vuex';\nexport default {\n  name: 'ButtonsAgeOptionsComponent',\n\n  data() {\n    return {\n      firstname: '',\n      age: '',\n      NotifErrorEmptyVal: true\n    };\n  },\n\n  props: {\n    ageArr: {\n      type: Array,\n      required: true\n    },\n    goalsArr: {\n      type: Array,\n      required: true\n    },\n    interestsArr: {\n      type: Array,\n      required: true\n    },\n    ValidateButtonValue: {\n      type: String,\n      required: true\n    }\n  },\n  methods: { ...mapActions(['updateAge', 'addNewGoals', 'removeGoals', 'addNewInterests', 'removeInterests']),\n\n    validateForm() {\n      const firstname = this.firstname;\n      const age = this.$store.state.age;\n      const goals = this.$store.state.preferences.goals;\n      const interests = this.$store.state.preferences.interests;\n      [firstname, age, goals, interests].forEach(info => {\n        if (info.length === 0) {\n          console.log('oups');\n        }\n      });\n      const userInfos = {\n        firstname,\n        age,\n        preferences: {\n          goals,\n          interests\n        }\n      };\n\n      if (userInfos.includes(false) || goals.length === 0 || interests.length === 0) {\n        console.log('Oups !');\n      }\n    },\n\n    toggleButton(e) {\n      // TOGGLE AGE OPTIONS BUTTONS :\n      if (e.target.className.includes('btn-ages-options')) {\n        document.querySelectorAll('.btn-ages-options').forEach(button => {\n          if (button !== e.target) {\n            button.classList.remove('selected');\n          }\n\n          if (button === e.target) {\n            if (e.target.className.includes('selected')) {\n              e.target.classList.remove('selected');\n              this.age = '';\n              this.$store.commit('updateAge', this.age);\n            } else if (!e.target.className.includes('selected')) {\n              e.target.classList.add('selected');\n              this.age = button.value;\n              this.$store.commit('updateAge', this.age); // console.log('age: ', this.$store.state.age)\n            }\n          }\n        });\n      }\n\n      if (e.target.className.includes('btn-goals-options')) {\n        document.querySelectorAll('.btn-goals-options').forEach(button => {\n          if (button === e.target) {\n            if (e.target.className.includes('selected')) {\n              e.target.classList.remove('selected');\n              this.$store.commit('removeGoals', button.value);\n            } else if (!e.target.className.includes('selected')) {\n              e.target.classList.add('selected');\n              this.$store.commit('addNewGoals', button.value);\n            }\n          }\n        }); // console.log('goals: ', this.$store.state.preferences.goals)\n      }\n\n      if (e.target.className.includes('btn-interests-options')) {\n        document.querySelectorAll('.btn-interests-options').forEach(button => {\n          if (button === e.target) {\n            if (e.target.className.includes('selected')) {\n              e.target.classList.remove('selected');\n              this.$store.commit('removeInterests', button.value);\n            } else if (!e.target.className.includes('selected')) {\n              e.target.classList.add('selected');\n              this.$store.commit('addNewInterests', button.value);\n            }\n          }\n        }); // console.log('interests: ', this.$store.state.preferences.interests)\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAoCA;AACA;EACAA,kCADA;;EAEAC;IACA;MACAC,aADA;MAEAC,OAFA;MAGAC;IAHA;EAKA,CARA;;EASAC;IACAC;MACAC,WADA;MAEAC;IAFA,CADA;IAKAC;MACAF,WADA;MAEAC;IAFA,CALA;IASAE;MACAH,WADA;MAEAC;IAFA,CATA;IAaAG;MACAJ,YADA;MAEAC;IAFA;EAbA,CATA;EA2BAI,WACA,gGADA;;IAEAC;MACA;MACA;MACA;MACA;MAEA;QACA;UACAC;QACA;MACA,CAJA;MAKA;QACAZ,SADA;QAEAC,GAFA;QAGAY;UACAC,KADA;UAEAC;QAFA;MAHA;;MASA;QACAH;MACA;IACA,CAzBA;;IA0BAI;MACA;MACA;QACAC;UACA;YACAC;UACA;;UACA;YACA;cACAC;cACA;cACA;YACA,CAJA,MAIA;cACAA;cACA;cACA,0CAHA,CAIA;YACA;UACA;QACA,CAhBA;MAiBA;;MACA;QACAF;UACA;YACA;cACAE;cACA;YACA,CAHA,MAGA;cACAA;cACA;YACA;UACA;QACA,CAVA,EADA,CAYA;MACA;;MACA;QACAF;UACA;YACA;cACAE;cACA;YACA,CAHA,MAGA;cACAA;cACA;YACA;UACA;QACA,CAVA,EADA,CAYA;MACA;IACA;;EA3EA;AA3BA","names":["name","data","firstname","age","NotifErrorEmptyVal","props","ageArr","type","required","goalsArr","interestsArr","ValidateButtonValue","methods","validateForm","console","preferences","goals","interests","toggleButton","document","button","e"],"sourceRoot":"src/components","sources":["ButtonsAgeOptions.vue"],"sourcesContent":["<template>\n    <div>\n      <div class=\"notification is-danger is-light column is-6\" v-if=\"NotifErrorEmptyVal\" >\n        <p class=\"error-notif\">Veuillez compléter tout le formulaire. </p>\n        <button class=\"delete\"></button>\n      </div>\n\n      <h2 class=\"is-size-4 has-text-centered\">Je m'appelle:</h2>\n      <input type=\"text\" name=\"firstname\" id=\"firstname\" v-model=\"firstname\" class=\"input input-firstname is-medium\">\n\n      <h2 class=\"is-size-4 has-text-centered\">J'ai:</h2>\n      <div class=\"buttons\">\n        <div v-for=\"(value) in ageArr\" :key=\"value\">\n            <input type=\"button\" class=\"btn-option btn-ages-options\" :value=value @click=\"toggleButton\">\n          </div>\n      </div>\n      <h2 class=\"is-size-4 has-text-centered title-goals\">Je suis ici pour...</h2>\n        <h3 class=\"is-size-6 has-text-centered\">Plusieurs choix possibles</h3>\n\n      <div class=\"buttons\">\n        <div v-for=\"(value) in goalsArr\" :key=\"value\">\n          <input type=\"button\" class=\"btn-option btn-goals-options\" :value=value @click=\"toggleButton\">\n        </div>\n    </div>\n      <h2 class=\"is-size-4 has-text-centered title-interests\">Je suis plutôt intéressé.e par les...</h2>\n      <h3 class=\"is-size-6 has-text-centered\">Plusieurs choix possibles</h3>\n      <div class=\"buttons\">\n        <div v-for=\"(value) in interestsArr\" :key=\"value\">\n          <input type=\"button\" class=\"btn-option btn-interests-options\" :value=value @click=\"toggleButton\">\n        </div>\n    </div>\n      <button class=\"btn-valider\" @click=\"validateForm\">{{ValidateButtonValue}}</button>\n    </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nexport default {\n  name: 'ButtonsAgeOptionsComponent',\n  data () {\n    return {\n      firstname: '',\n      age: '',\n      NotifErrorEmptyVal: true\n    }\n  },\n  props: {\n    ageArr: {\n      type: Array,\n      required: true\n    },\n    goalsArr: {\n      type: Array,\n      required: true\n    },\n    interestsArr: {\n      type: Array,\n      required: true\n    },\n    ValidateButtonValue: {\n      type: String,\n      required: true\n    }\n  },\n  methods: {\n    ...mapActions(['updateAge', 'addNewGoals', 'removeGoals', 'addNewInterests', 'removeInterests']),\n    validateForm () {\n      const firstname = this.firstname\n      const age = this.$store.state.age\n      const goals = this.$store.state.preferences.goals\n      const interests = this.$store.state.preferences.interests;\n\n      [firstname, age, goals, interests].forEach(info => {\n        if (info.length === 0) {\n          console.log('oups')\n        }\n      })\n      const userInfos = {\n        firstname,\n        age,\n        preferences: {\n          goals,\n          interests\n        }\n      }\n\n      if (userInfos.includes(false) || goals.length === 0 || interests.length === 0) {\n        console.log('Oups !')\n      }\n    },\n    toggleButton (e) {\n      // TOGGLE AGE OPTIONS BUTTONS :\n      if (e.target.className.includes('btn-ages-options')) {\n        document.querySelectorAll('.btn-ages-options').forEach(button => {\n          if (button !== e.target) {\n            button.classList.remove('selected')\n          }\n          if (button === e.target) {\n            if (e.target.className.includes('selected')) {\n              e.target.classList.remove('selected')\n              this.age = ''\n              this.$store.commit('updateAge', this.age)\n            } else if (!e.target.className.includes('selected')) {\n              e.target.classList.add('selected')\n              this.age = button.value\n              this.$store.commit('updateAge', this.age)\n              // console.log('age: ', this.$store.state.age)\n            }\n          }\n        })\n      }\n      if (e.target.className.includes('btn-goals-options')) {\n        document.querySelectorAll('.btn-goals-options').forEach(button => {\n          if (button === e.target) {\n            if (e.target.className.includes('selected')) {\n              e.target.classList.remove('selected')\n              this.$store.commit('removeGoals', button.value)\n            } else if (!e.target.className.includes('selected')) {\n              e.target.classList.add('selected')\n              this.$store.commit('addNewGoals', button.value)\n            }\n          }\n        })\n        // console.log('goals: ', this.$store.state.preferences.goals)\n      }\n      if (e.target.className.includes('btn-interests-options')) {\n        document.querySelectorAll('.btn-interests-options').forEach(button => {\n          if (button === e.target) {\n            if (e.target.className.includes('selected')) {\n              e.target.classList.remove('selected')\n              this.$store.commit('removeInterests', button.value)\n            } else if (!e.target.className.includes('selected')) {\n              e.target.classList.add('selected')\n              this.$store.commit('addNewInterests', button.value)\n            }\n          }\n        })\n        // console.log('interests: ', this.$store.state.preferences.interests)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.notification{\n    margin: 0 auto;\n    font-size: 1.1rem;\n    position: fixed;\n    position: fixed !important;\n    z-index: 1;\n    top: 10%;\n    transform: translate(50%,-100%);\n}\n\n.selected{\n    background-color:  #FFF1CC;\n}\n\n.buttons{\n  justify-content: center;\n}\n\n.btn-option{\n  font-family: 'Roboto', sans-serif;\n  height: 7vh;\n  min-width: 8vw;\n}\n\nh2{\n  font-family: 'Ibarra Real Nova', 'serif';\n}\n\n.title-goals, .title-interests{\n  margin-top: 5% !important;\n}\n\n.input-firstname{\n  width: 30%;\n  margin: auto;\n  display: block;\n  margin-bottom: 5%;\n}\n\n.btn-valider{\n  min-width: fit-content;\n  width: 20%;\n  height: 6.5vh;\n  font-weight: bold;\n  background-color: #FFF1CC;\n  text-transform: uppercase;\n  /* margin: auto !important; */\n  margin: 3% auto 0 40%;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}