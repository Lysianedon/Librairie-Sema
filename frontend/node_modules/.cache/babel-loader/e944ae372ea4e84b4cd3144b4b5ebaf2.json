{"ast":null,"code":"import _typeof from \"/Users/lysianedon/Documents/Mes projets Devs/sema02/frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nimport NavbarUser from '@/components/NavbarUser.vue';\nimport Book from '@/components/Book.vue';\nimport FooterComponent from '@/components/FooterComponent.vue';\nexport default {\n  name: 'HomeView',\n  data: function data() {\n    return {\n      username: '',\n      userLibrary: [],\n      userInfos: {},\n      bookList: [],\n      newBooks: [],\n      biographies: [],\n      personalisedSuggestion: {}\n    };\n  },\n  components: {\n    NavbarUser: NavbarUser,\n    Book: Book,\n    FooterComponent: FooterComponent\n  },\n  beforeMount: function beforeMount() {\n    var _this = this;\n\n    axios.get('http://localhost:8001/user', {\n      withCredentials: true\n    }).then(function (res) {\n      if (res.data.success) {\n        console.log(res.data.user);\n        _this.username = res.data.user.firstname;\n        _this.userInfos = res.data.user;\n      }\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    axios.get('http://localhost:8001/books', {\n      withCredentials: true\n    }).then(function (res) {\n      if (res.data.success) {\n        // Getting the book list:\n        var bookList = res.data.bookList; // console.log(bookList)\n        // Getting the newly added books:\n        // Step 1 : Flatten the obj before sorting them:\n\n        var flattenObj = function flattenObj(ob) {\n          // The object which contains the\n          // final result\n          var result = {}; // loop through the object \"ob\"\n\n          for (var i in ob) {\n            // We check the type of the i using\n            // typeof() function and recursively\n            // call the function again\n            if (_typeof(ob[i]) === 'object' && !Array.isArray(ob[i])) {\n              var temp = flattenObj(ob[i]);\n\n              for (var j in temp) {\n                // Store temp in result\n                result[i + j] = temp[j];\n              }\n            } else {\n              // Else store ob[i] in result directly\n              result[i] = ob[i];\n            }\n          }\n\n          return result;\n        };\n\n        var flattenBooksOjects = bookList.map(function (book) {\n          book = flattenObj(book);\n          return book;\n        }); // console.log(flattenBooksOjects)\n        // Step 2 : sorting the books:\n\n        var newlyAddedBooks = flattenBooksOjects.slice().sort(function (a, b) {\n          return b.dateAddedparsedFormat - a.dateAddedparsedFormat;\n        });\n        newlyAddedBooks.length = 4;\n        console.log('newlyAddedBooks', newlyAddedBooks);\n        _this2.newBooks = newlyAddedBooks;\n        var date = 'Wed Nov 09 2022';\n        console.log(\"stringFormat:\".concat(date, \" => parsedFormat:\").concat(Date.parse(date)));\n        console.log('date to String', new Date(1665612000000).toDateString()); // const books = [1661431787000, 1661429232332, 1661429717940, 1661429717988, 1661429717993, 1660924717993]\n        // Getting a selection of 4 biographies:\n\n        var biographies = bookList.filter(function (book) {\n          return book.genre.toLowerCase() === 'biographie' || book.genre.toLowerCase() === 'autobiographie';\n        });\n        biographies.length = 4; // console.log('biographies', biographies)\n\n        _this2.biographies = biographies; // Get a selection of four books :\n\n        bookList.length = 4; // console.log('bookList', bookList)\n\n        _this2.bookList = bookList; // Getting the user's personalised book suggestion:\n\n        axios.get('http://localhost:8001/user/library/personalised-suggestion', {\n          withCredentials: true\n        }).then(function (res) {\n          if (res.data.success) {\n            // console.log(res.data)\n            _this2.personalisedSuggestion = res.data.personalisedSuggestion;\n          }\n        }); // Getting the user's library:\n\n        axios.get('http://localhost:8001/user/library/', {\n          withCredentials: true\n        }).then(function (res) {\n          if (res.data.success) {\n            // console.log(res.data)\n            _this2.userLibrary = res.data.userLibrary;\n          }\n        });\n      }\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  }\n};","map":{"version":3,"mappings":";;;;;;;;AA+DA;AACA;AACA;AACA;AAEA;EACAA,gBADA;EAEAC,IAFA,kBAEA;IACA;MACAC,YADA;MAEAC,eAFA;MAGAC,aAHA;MAIAC,YAJA;MAKAC,YALA;MAMAC,eANA;MAOAC;IAPA;EASA,CAZA;EAaAC;IACAC,sBADA;IAEAC,UAFA;IAGAC;EAHA,CAbA;EAkBAC,WAlBA,yBAkBA;IAAA;;IACAC,MACAC,GADA,CACA,4BADA,EACA;MAAAC;IAAA,CADA,EAEAC,IAFA,CAEA;MACA;QACAC;QACA;QACA;MACA;IACA,CARA,WASA;MACA;IACA,CAXA;EAYA,CA/BA;EAgCAC,OAhCA,qBAgCA;IAAA;;IACAL,MACAC,GADA,CACA,6BADA,EACA;MAAAC;IAAA,CADA,EAEAC,IAFA,CAEA;MACA;QACA;QACA,iCAFA,CAGA;QAEA;QAEA;;QACA;UACA;UACA;UACA,gBAHA,CAIA;;UACA;YACA;YACA;YACA;YACA;cACA;;cACA;gBACA;gBACAG;cACA;YACA,CANA,MAMA;cAAA;cACAA;YACA;UACA;;UACA;QACA,CApBA;;QAqBA;UACAC;UACA;QACA,CAHA,EA7BA,CAiCA;QAEA;;QACA;UAAA;QAAA;QACAC;QACAJ;QACA;QAEA;QACAA;QACAA,sEA3CA,CA4CA;QAEA;;QACA;UAAA;QAAA;QACAX,uBAhDA,CAiDA;;QACA,iCAlDA,CAoDA;;QACAF,oBArDA,CAsDA;;QACA,2BAvDA,CAyDA;;QACAS,MACAC,GADA,CACA,4DADA,EACA;UAAAC;QAAA,CADA,EAEAC,IAFA,CAEA;UACA;YACA;YACA;UACA;QACA,CAPA,EA1DA,CAkEA;;QACAH,MACAC,GADA,CACA,qCADA,EACA;UAAAC;QAAA,CADA,EAEAC,IAFA,CAEA;UACA;YACA;YACA;UACA;QACA,CAPA;MAQA;IACA,CA/EA,WAgFA;MACA;IACA,CAlFA;EAmFA;AApHA","names":["name","data","username","userLibrary","userInfos","bookList","newBooks","biographies","personalisedSuggestion","components","NavbarUser","Book","FooterComponent","beforeMount","axios","get","withCredentials","then","console","mounted","result","book","newlyAddedBooks"],"sourceRoot":"src/views/user","sources":["HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"nav\">\n      <NavbarUser/>\n    </div>\n      <a href=\"\" id=\"scrollToTop\"></a>\n\n    <div class=\"content\">\n      <img src=\"@/assets/banner.png\" alt=\"banniere de page d'accueil\" srcset=\"\" class=\"banner\">\n\n      <div\n        class=\"title-button\"\n        v-if=\"userLibrary && userLibrary.allBooks && userLibrary.allBooks.length > 0\">\n        <h2>MA BIBLIOTHÈQUE</h2>\n        <router-link to=\"/ma-bibliotheque\" class=\"btn-afficher-tout\">Afficher tout</router-link>\n      </div>\n      <Book\n      :bookSelection=\"userLibrary.allBooks\"/>\n\n      <div class=\"title-button\">\n        <h2>NOUVEAUTÉS</h2>\n        <router-link to=\"/livres/nouveautes\" class=\"btn-afficher-tout\">Afficher tout</router-link>\n      </div>\n      <Book\n      :bookSelection=\"newBooks\"/>\n\n      <div class=\"title-button\">\n        <h2>BIOGRAPHIES</h2>\n        <router-link to=\"/livres/biographies\" class=\"btn-afficher-tout\">Afficher tout</router-link>\n      </div>\n\n      <Book\n      :bookSelection=\"biographies\"/>\n\n        <div class=\"personalisedSelection\" v-if=\"personalisedSuggestion.title\">\n          <h2 class=\"center\">SÉLECTIONNÉ POUR VOUS</h2>\n          <Book\n          :personalisedSuggestion=\"personalisedSuggestion\"/>\n        </div>\n\n      <div class=\"title-button\">\n        <h2>TOUS LES LIVRES</h2>\n        <router-link to=\"/livres/tout-les-livres\" class=\"btn-afficher-tout\">Afficher tout</router-link>\n      </div>\n      <Book\n      :bookSelection=\"bookList\"/>\n    </div>\n\n    <a href=\"#scrollToTop\" class=\"haut-de-page\">\n      <b-tooltip\n            label=\"Remonter\"\n            type=\"is-white\"\n            position=\"is-top\">\n          <font-awesome-icon icon=\"fa-solid fa-arrow-up\" />\n        </b-tooltip>\n    </a>\n\n    <FooterComponent/>\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport NavbarUser from '@/components/NavbarUser.vue'\nimport Book from '@/components/Book.vue'\nimport FooterComponent from '@/components/FooterComponent.vue'\n\nexport default {\n  name: 'HomeView',\n  data () {\n    return {\n      username: '',\n      userLibrary: [],\n      userInfos: {},\n      bookList: [],\n      newBooks: [],\n      biographies: [],\n      personalisedSuggestion: {}\n    }\n  },\n  components: {\n    NavbarUser,\n    Book,\n    FooterComponent\n  },\n  beforeMount () {\n    axios\n      .get('http://localhost:8001/user', { withCredentials: true })\n      .then(res => {\n        if (res.data.success) {\n          console.log(res.data.user)\n          this.username = res.data.user.firstname\n          this.userInfos = res.data.user\n        }\n      })\n      .catch(err => {\n        return console.log(err)\n      })\n  },\n  mounted () {\n    axios\n      .get('http://localhost:8001/books', { withCredentials: true })\n      .then(res => {\n        if (res.data.success) {\n          // Getting the book list:\n          const bookList = res.data.bookList\n          // console.log(bookList)\n\n          // Getting the newly added books:\n\n          // Step 1 : Flatten the obj before sorting them:\n          const flattenObj = (ob) => {\n            // The object which contains the\n            // final result\n            const result = {}\n            // loop through the object \"ob\"\n            for (const i in ob) {\n              // We check the type of the i using\n              // typeof() function and recursively\n              // call the function again\n              if ((typeof ob[i]) === 'object' && !Array.isArray(ob[i])) {\n                const temp = flattenObj(ob[i])\n                for (const j in temp) {\n                  // Store temp in result\n                  result[i + j] = temp[j]\n                }\n              } else { // Else store ob[i] in result directly\n                result[i] = ob[i]\n              }\n            }\n            return result\n          }\n          const flattenBooksOjects = bookList.map(book => {\n            book = flattenObj(book)\n            return book\n          })\n          // console.log(flattenBooksOjects)\n\n          // Step 2 : sorting the books:\n          const newlyAddedBooks = flattenBooksOjects.slice().sort((a, b) => b.dateAddedparsedFormat - a.dateAddedparsedFormat)\n          newlyAddedBooks.length = 4\n          console.log('newlyAddedBooks', newlyAddedBooks)\n          this.newBooks = newlyAddedBooks\n\n          const date = 'Wed Nov 09 2022'\n          console.log(`stringFormat:${date} => parsedFormat:${Date.parse(date)}`)\n          console.log('date to String', new Date(1665612000000).toDateString())\n          // const books = [1661431787000, 1661429232332, 1661429717940, 1661429717988, 1661429717993, 1660924717993]\n\n          // Getting a selection of 4 biographies:\n          const biographies = bookList.filter(book => book.genre.toLowerCase() === 'biographie' || book.genre.toLowerCase() === 'autobiographie')\n          biographies.length = 4\n          // console.log('biographies', biographies)\n          this.biographies = biographies\n\n          // Get a selection of four books :\n          bookList.length = 4\n          // console.log('bookList', bookList)\n          this.bookList = bookList\n\n          // Getting the user's personalised book suggestion:\n          axios\n            .get('http://localhost:8001/user/library/personalised-suggestion', { withCredentials: true })\n            .then(res => {\n              if (res.data.success) {\n                // console.log(res.data)\n                this.personalisedSuggestion = res.data.personalisedSuggestion\n              }\n            })\n          // Getting the user's library:\n          axios\n            .get('http://localhost:8001/user/library/', { withCredentials: true })\n            .then(res => {\n              if (res.data.success) {\n                // console.log(res.data)\n                this.userLibrary = res.data.userLibrary\n              }\n            })\n        }\n      })\n      .catch(err => {\n        return console.log(err)\n      })\n  }\n}\n</script>\n\n<style scoped>\n\n.content{\n  margin: 3% auto 0 22vw;\n  width: 91vw;\n}\n\n.nav{\n  position: fixed;\n  top: 6%;\n}\n\n.banner{\n  width: 82%;\n  margin: auto;\n  height: 42vh;\n  border: 2px solid rgb(88, 88, 88);\n  border-radius: 15px;\n}\n\n.title-button{\n  display: flex;\n  justify-content: space-between;\n  margin-top: 3%;\n  width: 74vw;\n}\n\nh2{\n  font-family: 'Ibarra Real Nova', serif;\n  color: black;\n  cursor: default;\n}\n\n.personalisedSelection{\n  /* width: 50%; */\n  margin: 8% auto 8% 5%;\n}\n.center{\n  margin: auto;\n  /* border: 1px solid green; */\n  width: 70%;\n}\n\n.haut-de-page{\n  margin-left: 95vw;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}