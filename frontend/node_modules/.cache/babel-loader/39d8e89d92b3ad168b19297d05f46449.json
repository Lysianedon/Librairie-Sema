{"ast":null,"code":"import axios from 'axios';\nimport NavbarUser from '@/components/NavbarUser.vue';\nexport default {\n  name: 'HomeView',\n\n  data() {\n    return {\n      username: '',\n      userInfos: {},\n      bookList: [],\n      newBooks: [],\n      biographies: [],\n      userSuggestion: {}\n    };\n  },\n\n  components: {\n    NavbarUser\n  },\n\n  beforeMount() {\n    axios.get('http://localhost:8001/user', {\n      withCredentials: true\n    }).then(res => {\n      if (res.data.success) {\n        // console.log(res.data.user)\n        this.username = res.data.user.firstname;\n        this.userInfos = res.data.user;\n      }\n    }).catch(err => {\n      return console.log(err);\n    });\n  },\n\n  mounted() {\n    axios.get('http://localhost:8001/books', {\n      withCredentials: true\n    }).then(res => {\n      if (res.data.success) {\n        // Getting the book list:\n        const bookList = res.data.bookList; // console.log(bookList)\n        // Getting the newly added books:\n        // Step 1 : Flatten the obj before sorting them:\n\n        const flattenObj = ob => {\n          // The object which contains the\n          // final result\n          const result = {}; // loop through the object \"ob\"\n\n          for (const i in ob) {\n            // We check the type of the i using\n            // typeof() function and recursively\n            // call the function again\n            if (typeof ob[i] === 'object' && !Array.isArray(ob[i])) {\n              const temp = flattenObj(ob[i]);\n\n              for (const j in temp) {\n                // Store temp in result\n                result[i + j] = temp[j];\n              }\n            } else {\n              // Else store ob[i] in result directly\n              result[i] = ob[i];\n            }\n          }\n\n          return result;\n        };\n\n        const flattenBooksOjects = bookList.map(book => {\n          book = flattenObj(book);\n          return book;\n        }); // console.log(flattenBooksOjects)\n        // Step 2 : sorting the books:\n\n        const newlyAddedBooks = flattenBooksOjects.slice().sort((a, b) => b.dateAddedparsedFormat - a.dateAddedparsedFormat);\n        newlyAddedBooks.length = 4;\n        console.log('newlyAddedBooks', newlyAddedBooks);\n        this.newBooks = newlyAddedBooks; // const date = 'Thu Feb 10 2022'\n        // console.log(`stringFormat:${date} => parsedFormat:${Date.parse(date)}`)\n        // console.log('date to String', new Date(1665612000000).toDateString())\n        // const books = [1661431787000, 1661429232332, 1661429717940, 1661429717988, 1661429717993, 1660924717993]\n        // Getting a selection of 4 biographies:\n\n        const biographies = bookList.filter(book => book.genre.toLowerCase() === 'biographie' || book.genre.toLowerCase() === 'autobiographie');\n        biographies.length = 4; // console.log('biographies', biographies)\n\n        this.biographies = biographies; // Get a selection of four books :\n\n        bookList.length = 4; // console.log('bookList', bookList)\n\n        this.bookList = bookList; // Getting the user's personalised book suggestion:\n\n        axios.get('http://localhost:8001/user/library/personalised-suggestion', {\n          withCredentials: true\n        }).then(res => {\n          if (res.data.success) {\n            // console.log(res.data)\n            this.userSuggestion = res.data.personalisedSuggestion;\n          }\n        });\n      }\n    }).catch(err => {\n      return console.log(err);\n    });\n  }\n\n};","map":{"version":3,"mappings":"AAoBA;AACA;AACA;EACAA,gBADA;;EAEAC;IACA;MACAC,YADA;MAEAC,aAFA;MAGAC,YAHA;MAIAC,YAJA;MAKAC,eALA;MAMAC;IANA;EAQA,CAXA;;EAYAC;IACAC;EADA,CAZA;;EAeAC;IACAC,MACAC,GADA,CACA,4BADA,EACA;MAAAC;IAAA,CADA,EAEAC,IAFA,CAEAC;MACA;QACA;QACA;QACA;MACA;IACA,CARA,EASAC,KATA,CASAC;MACA;IACA,CAXA;EAYA,CA5BA;;EA6BAC;IACAP,MACAC,GADA,CACA,6BADA,EACA;MAAAC;IAAA,CADA,EAEAC,IAFA,CAEAC;MACA;QACA;QACA,mCAFA,CAGA;QAEA;QAEA;;QACA;UACA;UACA;UACA,kBAHA,CAIA;;UACA;YACA;YACA;YACA;YACA;cACA;;cACA;gBACA;gBACAI;cACA;YACA,CANA,MAMA;cAAA;cACAA;YACA;UACA;;UACA;QACA,CApBA;;QAqBA;UACAC;UACA;QACA,CAHA,EA7BA,CAiCA;QAEA;;QACA;QACAC;QACAC;QACA,gCAvCA,CAyCA;QACA;QACA;QACA;QAEA;;QACA;QACAhB,uBAhDA,CAiDA;;QACA,+BAlDA,CAoDA;;QACAF,oBArDA,CAsDA;;QACA,yBAvDA,CAyDA;;QACAO,MACAC,GADA,CACA,4DADA,EACA;UAAAC;QAAA,CADA,EAEAC,IAFA,CAEAC;UACA;YACA;YACA;UACA;QACA,CAPA;MAQA;IACA,CAtEA,EAuEAC,KAvEA,CAuEAC;MACA;IACA,CAzEA;EA0EA;;AAxGA","names":["name","data","username","userInfos","bookList","newBooks","biographies","userSuggestion","components","NavbarUser","beforeMount","axios","get","withCredentials","then","res","catch","err","mounted","result","book","newlyAddedBooks","console"],"sourceRoot":"src/views","sources":["HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"nav\">\n      <NavbarUser/>\n    </div>\n\n    <div class=\"content\">\n      <img src=\"@/assets/banniere-homepage.png\" alt=\"banniere de page d'accueil\" srcset=\"\" class=\"banner\">\n\n      <h2>MA LIBRAIRIE</h2>\n      <h2>NOUVEAUTÉS</h2>\n      <h2>BIOGRAPHIES</h2>\n      <h2>SÉLECTIONNÉ POUR VOUS</h2>\n      <h2>TOUS LES LIVRES</h2>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport NavbarUser from '@/components/NavbarUser.vue'\nexport default {\n  name: 'HomeView',\n  data () {\n    return {\n      username: '',\n      userInfos: {},\n      bookList: [],\n      newBooks: [],\n      biographies: [],\n      userSuggestion: {}\n    }\n  },\n  components: {\n    NavbarUser\n  },\n  beforeMount () {\n    axios\n      .get('http://localhost:8001/user', { withCredentials: true })\n      .then(res => {\n        if (res.data.success) {\n          // console.log(res.data.user)\n          this.username = res.data.user.firstname\n          this.userInfos = res.data.user\n        }\n      })\n      .catch(err => {\n        return console.log(err)\n      })\n  },\n  mounted () {\n    axios\n      .get('http://localhost:8001/books', { withCredentials: true })\n      .then(res => {\n        if (res.data.success) {\n          // Getting the book list:\n          const bookList = res.data.bookList\n          // console.log(bookList)\n\n          // Getting the newly added books:\n\n          // Step 1 : Flatten the obj before sorting them:\n          const flattenObj = (ob) => {\n            // The object which contains the\n            // final result\n            const result = {}\n            // loop through the object \"ob\"\n            for (const i in ob) {\n              // We check the type of the i using\n              // typeof() function and recursively\n              // call the function again\n              if ((typeof ob[i]) === 'object' && !Array.isArray(ob[i])) {\n                const temp = flattenObj(ob[i])\n                for (const j in temp) {\n                  // Store temp in result\n                  result[i + j] = temp[j]\n                }\n              } else { // Else store ob[i] in result directly\n                result[i] = ob[i]\n              }\n            }\n            return result\n          }\n          const flattenBooksOjects = bookList.map(book => {\n            book = flattenObj(book)\n            return book\n          })\n          // console.log(flattenBooksOjects)\n\n          // Step 2 : sorting the books:\n          const newlyAddedBooks = flattenBooksOjects.slice().sort((a, b) => b.dateAddedparsedFormat - a.dateAddedparsedFormat)\n          newlyAddedBooks.length = 4\n          console.log('newlyAddedBooks', newlyAddedBooks)\n          this.newBooks = newlyAddedBooks\n\n          // const date = 'Thu Feb 10 2022'\n          // console.log(`stringFormat:${date} => parsedFormat:${Date.parse(date)}`)\n          // console.log('date to String', new Date(1665612000000).toDateString())\n          // const books = [1661431787000, 1661429232332, 1661429717940, 1661429717988, 1661429717993, 1660924717993]\n\n          // Getting a selection of 4 biographies:\n          const biographies = bookList.filter(book => book.genre.toLowerCase() === 'biographie' || book.genre.toLowerCase() === 'autobiographie')\n          biographies.length = 4\n          // console.log('biographies', biographies)\n          this.biographies = biographies\n\n          // Get a selection of four books :\n          bookList.length = 4\n          // console.log('bookList', bookList)\n          this.bookList = bookList\n\n          // Getting the user's personalised book suggestion:\n          axios\n            .get('http://localhost:8001/user/library/personalised-suggestion', { withCredentials: true })\n            .then(res => {\n              if (res.data.success) {\n                // console.log(res.data)\n                this.userSuggestion = res.data.personalisedSuggestion\n              }\n            })\n        }\n      })\n      .catch(err => {\n        return console.log(err)\n      })\n  }\n}\n</script>\n\n<style scoped>\n.content{\n  margin: 5% auto 0 20vw;\n}\n\n.banner{\n  width: 70%;\n  /* max-height: auto; */\n  border: 2px solid black;\n  border-radius: 20px;\n}\n\nh2{\n  font-family: 'Ibarra Real Nova', serif;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}